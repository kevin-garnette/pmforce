
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BACKSLASH BAR CARET COMMA DASH DIGIT DOLLAR DOT LBRACE LBRACKET LPAREN NON_META_CHAR PLUS QUESTION RBRACE RBRACKET RPAREN STARregex : outer_termregex : outer_term BAR regexouter_term : termouter_term : CARET termouter_term : term DOLLARouter_term : CARET term DOLLARterm : factorterm : factor term\n        factor : NON_META_CHAR\n               | DIGIT\n               | DASH\n               | COMMA\n        factor : DOTfactor : factor STARfactor : factor PLUSfactor : factor QUESTIONfactor : LPAREN regex RPARENfactor : BACKSLASH DIGITfactor : set\n        factor : BACKSLASH DOT\n               | BACKSLASH STAR\n               | BACKSLASH PLUS\n               | BACKSLASH QUESTION\n               | BACKSLASH BAR\n               | BACKSLASH LPAREN\n               | BACKSLASH RPAREN\n               | BACKSLASH LBRACKET\n               | BACKSLASH RBRACKET\n               | BACKSLASH CARET\n               | BACKSLASH LBRACE\n               | BACKSLASH RBRACE\n               | BACKSLASH DASH\n               | BACKSLASH COMMA\n               | BACKSLASH BACKSLASH\n        \n        factor : BACKSLASH NON_META_CHAR\n        factor : factor LBRACE number RBRACEfactor : factor LBRACE number COMMA RBRACEfactor : factor LBRACE number COMMA number RBRACEnumber : DIGITnumber : DIGIT numberset : LBRACKET set_items RBRACKETset : LBRACKET CARET set_items RBRACKETset_items : set_itemset_items : set_item set_itemsset_item : set_non_meta_charset_item : set_non_meta_char DASH set_non_meta_char\n        set_item : BACKSLASH RBRACKET\n                 | BACKSLASH CARET\n                 | BACKSLASH DASH\n                 | BACKSLASH BACKSLASH\n        \n        set_item : BACKSLASH set_non_meta_char\n        \n        set_non_meta_char : NON_META_CHAR\n                          | LBRACKET\n                          | DIGIT\n                          | DOT\n                          | STAR\n                          | PLUS\n                          | QUESTION\n                          | BAR\n                          | LPAREN\n                          | RPAREN\n                          | LBRACE\n                          | RBRACE\n                          | COMMA\n        '
    
_lr_action_items = {'CARET':([0,11,12,14,15,46,],[4,4,35,43,4,70,]),'NON_META_CHAR':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[6,6,6,-9,-10,-11,-12,-13,6,40,-19,47,6,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,47,47,-45,47,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,47,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'DIGIT':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,69,70,71,72,73,74,76,77,79,80,],[7,7,7,-9,-10,-11,-12,-13,7,25,-19,48,7,-14,-15,-16,62,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,48,48,-45,48,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,62,-17,-41,48,-50,-47,-48,-49,-51,-36,62,-42,-46,-37,-38,]),'DASH':([0,4,5,6,7,8,9,10,11,12,13,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,73,76,79,80,],[8,8,8,-9,-10,-11,-12,-13,8,38,-19,8,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,67,71,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,-36,-42,-37,-38,]),'COMMA':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,67,68,69,70,71,72,73,75,76,77,79,80,],[9,9,9,-9,-10,-11,-12,-13,9,39,-19,58,9,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,58,58,-45,58,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,74,-39,-17,-41,58,-50,-47,-48,-49,-51,-36,-40,-42,-46,-37,-38,]),'DOT':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[10,10,10,-9,-10,-11,-12,-13,10,26,-19,49,10,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,49,49,-45,49,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,49,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'LPAREN':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[11,11,11,-9,-10,-11,-12,-13,11,31,-19,54,11,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,54,54,-45,54,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,54,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'BACKSLASH':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,68,69,70,71,72,73,76,77,79,80,],[12,12,12,-9,-10,-11,-12,-13,12,24,-19,46,12,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,46,46,-45,68,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'LBRACKET':([0,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[14,14,14,-9,-10,-11,-12,-13,14,33,-19,41,14,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,41,41,-45,41,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,41,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'$end':([1,2,3,5,6,7,8,9,10,13,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,59,60,63,64,73,76,79,80,],[0,-1,-3,-7,-9,-10,-11,-12,-13,-19,-5,-4,-8,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-2,-6,-17,-41,-36,-42,-37,-38,]),'RPAREN':([2,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,67,68,69,70,71,72,73,76,77,79,80,],[-1,-3,-7,-9,-10,-11,-12,-13,32,-19,55,-5,-4,-8,-14,-15,-16,63,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,55,55,-45,55,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-2,-6,-17,-41,55,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'BAR':([2,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,64,67,68,69,70,71,72,73,76,77,79,80,],[15,-3,-7,-9,-10,-11,-12,-13,30,-19,53,-5,-4,-8,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,53,53,-45,53,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-6,-17,-41,53,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'DOLLAR':([3,5,6,7,8,9,10,13,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,63,64,73,76,79,80,],[16,-7,-9,-10,-11,-12,-13,-19,60,-8,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-17,-41,-36,-42,-37,-38,]),'STAR':([5,6,7,8,9,10,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[19,-9,-10,-11,-12,-13,27,-19,50,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,50,50,-45,50,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,50,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'PLUS':([5,6,7,8,9,10,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[20,-9,-10,-11,-12,-13,28,-19,51,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,51,51,-45,51,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,51,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'QUESTION':([5,6,7,8,9,10,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[21,-9,-10,-11,-12,-13,29,-19,52,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,52,52,-45,52,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,52,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'LBRACE':([5,6,7,8,9,10,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,64,67,68,69,70,71,72,73,76,77,79,80,],[22,-9,-10,-11,-12,-13,36,-19,56,-14,-15,-16,-34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-35,-53,56,56,-45,56,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-17,-41,56,-50,-47,-48,-49,-51,-36,-42,-46,-37,-38,]),'RBRACKET':([12,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,66,68,69,70,71,72,77,],[34,-53,64,-43,-45,69,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,76,-44,-50,-47,-48,-49,-51,-46,]),'RBRACE':([12,14,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,67,68,69,70,71,72,74,75,77,78,],[37,57,-53,57,57,-45,57,-52,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,73,-39,57,-50,-47,-48,-49,-51,79,-40,-46,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'regex':([0,11,15,],[1,23,59,]),'outer_term':([0,11,15,],[2,2,2,]),'term':([0,4,5,11,15,],[3,17,18,3,3,]),'factor':([0,4,5,11,15,],[5,5,5,5,5,]),'set':([0,4,5,11,15,],[13,13,13,13,13,]),'set_items':([14,43,44,],[42,65,66,]),'set_item':([14,43,44,],[44,44,44,]),'set_non_meta_char':([14,43,44,46,67,],[45,45,45,72,77,]),'number':([22,62,74,],[61,75,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> regex","S'",1,None,None,None),
  ('regex -> outer_term','regex',1,'p_regex_term','regex_parser.py',80),
  ('regex -> outer_term BAR regex','regex',3,'p_regex_union','regex_parser.py',84),
  ('outer_term -> term','outer_term',1,'p_outer_term_term','regex_parser.py',88),
  ('outer_term -> CARET term','outer_term',2,'p_outer_term_caret','regex_parser.py',92),
  ('outer_term -> term DOLLAR','outer_term',2,'p_outer_term_dollar','regex_parser.py',96),
  ('outer_term -> CARET term DOLLAR','outer_term',3,'p_outer_term_caret_dollar','regex_parser.py',100),
  ('term -> factor','term',1,'p_term_factor','regex_parser.py',104),
  ('term -> factor term','term',2,'p_term_concat','regex_parser.py',108),
  ('factor -> NON_META_CHAR','factor',1,'p_factor_char','regex_parser.py',113),
  ('factor -> DIGIT','factor',1,'p_factor_char','regex_parser.py',114),
  ('factor -> DASH','factor',1,'p_factor_char','regex_parser.py',115),
  ('factor -> COMMA','factor',1,'p_factor_char','regex_parser.py',116),
  ('factor -> DOT','factor',1,'p_factor_dot','regex_parser.py',121),
  ('factor -> factor STAR','factor',2,'p_factor_star','regex_parser.py',125),
  ('factor -> factor PLUS','factor',2,'p_factor_plus','regex_parser.py',129),
  ('factor -> factor QUESTION','factor',2,'p_factor_question','regex_parser.py',133),
  ('factor -> LPAREN regex RPAREN','factor',3,'p_factor_group','regex_parser.py',137),
  ('factor -> BACKSLASH DIGIT','factor',2,'p_factor_backref','regex_parser.py',142),
  ('factor -> set','factor',1,'p_factor_set','regex_parser.py',147),
  ('factor -> BACKSLASH DOT','factor',2,'p_factor_escape','regex_parser.py',154),
  ('factor -> BACKSLASH STAR','factor',2,'p_factor_escape','regex_parser.py',155),
  ('factor -> BACKSLASH PLUS','factor',2,'p_factor_escape','regex_parser.py',156),
  ('factor -> BACKSLASH QUESTION','factor',2,'p_factor_escape','regex_parser.py',157),
  ('factor -> BACKSLASH BAR','factor',2,'p_factor_escape','regex_parser.py',158),
  ('factor -> BACKSLASH LPAREN','factor',2,'p_factor_escape','regex_parser.py',159),
  ('factor -> BACKSLASH RPAREN','factor',2,'p_factor_escape','regex_parser.py',160),
  ('factor -> BACKSLASH LBRACKET','factor',2,'p_factor_escape','regex_parser.py',161),
  ('factor -> BACKSLASH RBRACKET','factor',2,'p_factor_escape','regex_parser.py',162),
  ('factor -> BACKSLASH CARET','factor',2,'p_factor_escape','regex_parser.py',163),
  ('factor -> BACKSLASH LBRACE','factor',2,'p_factor_escape','regex_parser.py',164),
  ('factor -> BACKSLASH RBRACE','factor',2,'p_factor_escape','regex_parser.py',165),
  ('factor -> BACKSLASH DASH','factor',2,'p_factor_escape','regex_parser.py',166),
  ('factor -> BACKSLASH COMMA','factor',2,'p_factor_escape','regex_parser.py',167),
  ('factor -> BACKSLASH BACKSLASH','factor',2,'p_factor_escape','regex_parser.py',168),
  ('factor -> BACKSLASH NON_META_CHAR','factor',2,'p_factor_escape_fallback','regex_parser.py',174),
  ('factor -> factor LBRACE number RBRACE','factor',4,'p_factor_brace_1','regex_parser.py',185),
  ('factor -> factor LBRACE number COMMA RBRACE','factor',5,'p_factor_brace_2','regex_parser.py',191),
  ('factor -> factor LBRACE number COMMA number RBRACE','factor',6,'p_factor_brace_3','regex_parser.py',201),
  ('number -> DIGIT','number',1,'p_number_single','regex_parser.py',212),
  ('number -> DIGIT number','number',2,'p_number_multiple','regex_parser.py',216),
  ('set -> LBRACKET set_items RBRACKET','set',3,'p_set_positive','regex_parser.py',220),
  ('set -> LBRACKET CARET set_items RBRACKET','set',4,'p_set_negative','regex_parser.py',224),
  ('set_items -> set_item','set_items',1,'p_set_items_single','regex_parser.py',228),
  ('set_items -> set_item set_items','set_items',2,'p_set_items_multiple','regex_parser.py',232),
  ('set_item -> set_non_meta_char','set_item',1,'p_set_item_char','regex_parser.py',236),
  ('set_item -> set_non_meta_char DASH set_non_meta_char','set_item',3,'p_set_item_range','regex_parser.py',240),
  ('set_item -> BACKSLASH RBRACKET','set_item',2,'p_set_item_escape','regex_parser.py',247),
  ('set_item -> BACKSLASH CARET','set_item',2,'p_set_item_escape','regex_parser.py',248),
  ('set_item -> BACKSLASH DASH','set_item',2,'p_set_item_escape','regex_parser.py',249),
  ('set_item -> BACKSLASH BACKSLASH','set_item',2,'p_set_item_escape','regex_parser.py',250),
  ('set_item -> BACKSLASH set_non_meta_char','set_item',2,'p_set_item_escape_fallback','regex_parser.py',256),
  ('set_non_meta_char -> NON_META_CHAR','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',265),
  ('set_non_meta_char -> LBRACKET','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',266),
  ('set_non_meta_char -> DIGIT','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',267),
  ('set_non_meta_char -> DOT','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',268),
  ('set_non_meta_char -> STAR','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',269),
  ('set_non_meta_char -> PLUS','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',270),
  ('set_non_meta_char -> QUESTION','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',271),
  ('set_non_meta_char -> BAR','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',272),
  ('set_non_meta_char -> LPAREN','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',273),
  ('set_non_meta_char -> RPAREN','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',274),
  ('set_non_meta_char -> LBRACE','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',275),
  ('set_non_meta_char -> RBRACE','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',276),
  ('set_non_meta_char -> COMMA','set_non_meta_char',1,'p_set_non_meta_char','regex_parser.py',277),
]
